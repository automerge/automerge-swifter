{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The serialized representation does not include session data which"},{"type":"text","text":" "},{"type":"text","text":"depends on reliable in-order delivery. I.e. you do not need to call"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState\/reset()"},{"type":"text","text":" on a decoded sync state."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/automerge\/syncstate\/encode()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState\/encode()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Serialize this sync state"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}],"title":"encode()","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:9Automerge9SyncStateV6encodeSays5UInt8VGyF","modules":[{"name":"Automerge"}]},"hierarchy":{"paths":[["doc:\/\/org.automerge.Automerge\/documentation\/Automerge","doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState"]]},"references":{"doc://org.automerge.Automerge/documentation/Automerge/SyncState/encode()":{"role":"symbol","title":"encode()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Serialize this sync state"}],"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState\/encode()","kind":"symbol","type":"topic","url":"\/documentation\/automerge\/syncstate\/encode()"},"doc://org.automerge.Automerge/documentation/Automerge/Document/receiveSyncMessage(state:message:)":{"role":"symbol","title":"receiveSyncMessage(state:message:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"receiveSyncMessage"},{"kind":"text","text":"("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyncState","preciseIdentifier":"s:9Automerge9SyncStateV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"message"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Receive a sync message from the peer represented by "},{"type":"codeVoice","code":"state"}],"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/Document\/receiveSyncMessage(state:message:)","kind":"symbol","type":"topic","url":"\/documentation\/automerge\/document\/receivesyncmessage(state:message:)"},"doc://org.automerge.Automerge/documentation/Automerge/SyncState":{"role":"symbol","title":"SyncState","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyncState"}],"abstract":[{"type":"text","text":"A synchronisation session with another peer"},{"type":"text","text":" "},{"type":"text","text":"The sync protocol is designed to run over a reliable in-order transport with"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState"},{"type":"text","text":" tracking the state between successive calls to"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/Document\/generateSyncMessage(state:)"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/Document\/receiveSyncMessage(state:message:)"},{"type":"text","text":". Assuming the existence of some"},{"type":"text","text":" "},{"type":"text","text":"network infrastructure for sending and receiving messages on the transport a"},{"type":"text","text":" "},{"type":"text","text":"loop to stay in sync might look like the following"}],"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SyncState"}],"url":"\/documentation\/automerge\/syncstate"},"doc://org.automerge.Automerge/documentation/Automerge/Document/generateSyncMessage(state:)":{"role":"symbol","title":"generateSyncMessage(state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"generateSyncMessage"},{"kind":"text","text":"("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyncState","preciseIdentifier":"s:9Automerge9SyncStateV"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]?"}],"abstract":[{"type":"text","text":"Generate a sync message to send to the peer represented by "},{"type":"codeVoice","code":"state"}],"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/Document\/generateSyncMessage(state:)","kind":"symbol","type":"topic","url":"\/documentation\/automerge\/document\/generatesyncmessage(state:)"},"doc://org.automerge.Automerge/documentation/Automerge":{"role":"collection","title":"Automerge","abstract":[{"type":"text","text":"A library which provides fast implementations of several different CRDTs, a compact compression format for these CRDTs, and a sync protocol for efficiently transmitting those changes over the network."}],"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge","kind":"symbol","type":"topic","url":"\/documentation\/automerge"},"doc://org.automerge.Automerge/documentation/Automerge/SyncState/reset()":{"role":"symbol","title":"reset()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Reset the state if the connection is interrupted"}],"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState\/reset()","kind":"symbol","type":"topic","url":"\/documentation\/automerge\/syncstate\/reset()"}}}