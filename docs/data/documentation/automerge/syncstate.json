{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyncState"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"codeListing","syntax":null,"code":["\/\/ somehow obtain the document, or create a new one if you have no data","let doc: Document = ...","let state = SyncState()","repeat {","   if let msg = doc.generateSyncMessage(state) {","       await network.send(msg)","   }","   let response = await network.receive() {","       try! doc.receiveSyncMessage(state, response)","   }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Sync states can be persisted. If you know a peer might connect to you again"},{"type":"text","text":" "},{"type":"text","text":"you can use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState\/encode()"},{"type":"text","text":" to save the state and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState\/init(bytes:)"},{"type":"text","text":" to decode it."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/automerge\/syncstate"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A synchronisation session with another peer"},{"type":"text","text":" "},{"type":"text","text":"The sync protocol is designed to run over a reliable in-order transport with"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState"},{"type":"text","text":" tracking the state between successive calls to"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/Document\/generateSyncMessage(state:)"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/Document\/receiveSyncMessage(state:message:)"},{"type":"text","text":". Assuming the existence of some"},{"type":"text","text":" "},{"type":"text","text":"network infrastructure for sending and receiving messages on the transport a"},{"type":"text","text":" "},{"type":"text","text":"loop to stay in sync might look like the following"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyncState"}],"title":"SyncState","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:9Automerge9SyncStateV","modules":[{"name":"Automerge"}],"navigatorTitle":[{"kind":"identifier","text":"SyncState"}]},"hierarchy":{"paths":[["doc:\/\/org.automerge.Automerge\/documentation\/Automerge"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState\/init()","doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState\/init(bytes:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState\/theirHeads"]},{"title":"Instance Methods","identifiers":["doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState\/encode()","doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState\/reset()"]}],"references":{"doc://org.automerge.Automerge/documentation/Automerge/SyncState":{"role":"symbol","title":"SyncState","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyncState"}],"abstract":[{"type":"text","text":"A synchronisation session with another peer"},{"type":"text","text":" "},{"type":"text","text":"The sync protocol is designed to run over a reliable in-order transport with"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState"},{"type":"text","text":" tracking the state between successive calls to"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/Document\/generateSyncMessage(state:)"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/Document\/receiveSyncMessage(state:message:)"},{"type":"text","text":". Assuming the existence of some"},{"type":"text","text":" "},{"type":"text","text":"network infrastructure for sending and receiving messages on the transport a"},{"type":"text","text":" "},{"type":"text","text":"loop to stay in sync might look like the following"}],"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SyncState"}],"url":"\/documentation\/automerge\/syncstate"},"doc://org.automerge.Automerge/documentation/Automerge/SyncState/reset()":{"role":"symbol","title":"reset()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Reset the state if the connection is interrupted"}],"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState\/reset()","kind":"symbol","type":"topic","url":"\/documentation\/automerge\/syncstate\/reset()"},"doc://org.automerge.Automerge/documentation/Automerge/SyncState/theirHeads":{"role":"symbol","title":"theirHeads","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"theirHeads"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ChangeHash","preciseIdentifier":"s:9Automerge10ChangeHashV"},{"kind":"text","text":">?"}],"abstract":[],"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState\/theirHeads","kind":"symbol","type":"topic","url":"\/documentation\/automerge\/syncstate\/theirheads"},"doc://org.automerge.Automerge/documentation/Automerge":{"role":"collection","title":"Automerge","abstract":[{"type":"text","text":"A library which provides fast implementations of several different CRDTs, a compact compression format for these CRDTs, and a sync protocol for efficiently transmitting those changes over the network."}],"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge","kind":"symbol","type":"topic","url":"\/documentation\/automerge"},"doc://org.automerge.Automerge/documentation/Automerge/SyncState/encode()":{"role":"symbol","title":"encode()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Serialize this sync state"}],"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState\/encode()","kind":"symbol","type":"topic","url":"\/documentation\/automerge\/syncstate\/encode()"},"doc://org.automerge.Automerge/documentation/Automerge/Document/receiveSyncMessage(state:message:)":{"role":"symbol","title":"receiveSyncMessage(state:message:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"receiveSyncMessage"},{"kind":"text","text":"("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyncState","preciseIdentifier":"s:9Automerge9SyncStateV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"message"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Receive a sync message from the peer represented by "},{"type":"codeVoice","code":"state"}],"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/Document\/receiveSyncMessage(state:message:)","kind":"symbol","type":"topic","url":"\/documentation\/automerge\/document\/receivesyncmessage(state:message:)"},"doc://org.automerge.Automerge/documentation/Automerge/SyncState/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState\/init()","kind":"symbol","type":"topic","url":"\/documentation\/automerge\/syncstate\/init()"},"doc://org.automerge.Automerge/documentation/Automerge/Document/generateSyncMessage(state:)":{"role":"symbol","title":"generateSyncMessage(state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"generateSyncMessage"},{"kind":"text","text":"("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyncState","preciseIdentifier":"s:9Automerge9SyncStateV"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]?"}],"abstract":[{"type":"text","text":"Generate a sync message to send to the peer represented by "},{"type":"codeVoice","code":"state"}],"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/Document\/generateSyncMessage(state:)","kind":"symbol","type":"topic","url":"\/documentation\/automerge\/document\/generatesyncmessage(state:)"},"doc://org.automerge.Automerge/documentation/Automerge/SyncState/init(bytes:)":{"role":"symbol","title":"init(bytes:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"bytes"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"throws"}],"abstract":[],"identifier":"doc:\/\/org.automerge.Automerge\/documentation\/Automerge\/SyncState\/init(bytes:)","kind":"symbol","type":"topic","url":"\/documentation\/automerge\/syncstate\/init(bytes:)"}}}