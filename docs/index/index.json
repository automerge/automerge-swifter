{"interfaceLanguages":{"swift":[{"children":[{"title":"Essentials","type":"groupMarker"},{"path":"\/documentation\/automerge\/addressbookexample","title":"Address Book Example","type":"article"},{"children":[{"title":"Creating or loading a document","type":"groupMarker"},{"path":"\/documentation\/automerge\/document\/init()","title":"init()","type":"init"},{"path":"\/documentation\/automerge\/document\/init(_:)","title":"init([UInt8]) throws","type":"init"},{"title":"Creating and modifying values","type":"groupMarker"},{"path":"\/documentation\/automerge\/document\/put(obj:key:value:)","title":"func put(obj: ObjId, key: String, value: ScalarValue) throws","type":"method"},{"path":"\/documentation\/automerge\/document\/put(obj:index:value:)","title":"func put(obj: ObjId, index: UInt64, value: ScalarValue) throws","type":"method"},{"path":"\/documentation\/automerge\/document\/putobject(obj:key:ty:)","title":"func putObject(obj: ObjId, key: String, ty: ObjType) throws -> ObjId","type":"method"},{"path":"\/documentation\/automerge\/document\/putobject(obj:index:ty:)","title":"func putObject(obj: ObjId, index: UInt64, ty: ObjType) throws -> ObjId","type":"method"},{"path":"\/documentation\/automerge\/document\/insertobject(obj:index:ty:)","title":"func insertObject(obj: ObjId, index: UInt64, ty: ObjType) throws -> ObjId","type":"method"},{"path":"\/documentation\/automerge\/document\/increment(obj:key:by:)","title":"func increment(obj: ObjId, key: String, by: Int64) throws","type":"method"},{"path":"\/documentation\/automerge\/document\/increment(obj:index:by:)","title":"func increment(obj: ObjId, index: UInt64, by: Int64) throws","type":"method"},{"path":"\/documentation\/automerge\/document\/delete(obj:key:)","title":"func delete(obj: ObjId, key: String) throws","type":"method"},{"path":"\/documentation\/automerge\/document\/delete(obj:index:)","title":"func delete(obj: ObjId, index: UInt64) throws","type":"method"},{"path":"\/documentation\/automerge\/document\/splice(obj:start:delete:values:)","title":"func splice(obj: ObjId, start: UInt64, delete: UInt64, values: [ScalarValue]) throws","type":"method"},{"path":"\/documentation\/automerge\/document\/splicetext(obj:start:delete:value:)","title":"func spliceText(obj: ObjId, start: UInt64, delete: UInt64, value: String?) throws","type":"method"},{"title":"Reading","type":"groupMarker"},{"path":"\/documentation\/automerge\/document\/get(obj:key:)","title":"func get(obj: ObjId, key: String) throws -> Value?","type":"method"},{"path":"\/documentation\/automerge\/document\/get(obj:index:)","title":"func get(obj: ObjId, index: UInt64) throws -> Value?","type":"method"},{"path":"\/documentation\/automerge\/document\/getall(obj:key:)","title":"func getAll(obj: ObjId, key: String) throws -> Set<Value>","type":"method"},{"path":"\/documentation\/automerge\/document\/getall(obj:index:)","title":"func getAll(obj: ObjId, index: UInt64) throws -> Set<Value>","type":"method"},{"path":"\/documentation\/automerge\/document\/keys(obj:)","title":"func keys(obj: ObjId) -> [String]","type":"method"},{"path":"\/documentation\/automerge\/document\/values(obj:)","title":"func values(obj: ObjId) throws -> [Value]","type":"method"},{"path":"\/documentation\/automerge\/document\/mapentries(obj:)","title":"func mapEntries(obj: ObjId) throws -> [(String, Value)]","type":"method"},{"path":"\/documentation\/automerge\/document\/length(obj:)","title":"func length(obj: ObjId) -> UInt64","type":"method"},{"path":"\/documentation\/automerge\/document\/text(obj:)","title":"func text(obj: ObjId) throws -> String","type":"method"},{"path":"\/documentation\/automerge\/document\/heads()","title":"func heads() -> Set<ChangeHash>","type":"method"},{"title":"Reading old values","type":"groupMarker"},{"path":"\/documentation\/automerge\/document\/getat(obj:key:heads:)","title":"func getAt<Heads>(obj: ObjId, key: String, heads: Heads) throws -> Value?","type":"method"},{"path":"\/documentation\/automerge\/document\/getat(obj:index:heads:)","title":"func getAt<Heads>(obj: ObjId, index: UInt64, heads: Heads) throws -> Value?","type":"method"},{"path":"\/documentation\/automerge\/document\/getallat(obj:key:heads:)","title":"func getAllAt<Heads>(obj: ObjId, key: String, heads: Heads) throws -> Set<Value>","type":"method"},{"path":"\/documentation\/automerge\/document\/getallat(obj:index:heads:)","title":"func getAllAt<Heads>(obj: ObjId, index: UInt64, heads: Heads) throws -> Set<Value>","type":"method"},{"path":"\/documentation\/automerge\/document\/keysat(obj:heads:)","title":"func keysAt<Heads>(obj: ObjId, heads: Heads) -> [String]","type":"method"},{"path":"\/documentation\/automerge\/document\/valuesat(obj:heads:)","title":"func valuesAt<Heads>(obj: ObjId, heads: Heads) throws -> [Value]","type":"method"},{"path":"\/documentation\/automerge\/document\/mapentriesat(obj:heads:)","title":"func mapEntriesAt<Heads>(obj: ObjId, heads: Heads) throws -> [(String, Value)]","type":"method"},{"path":"\/documentation\/automerge\/document\/lengthat(obj:heads:)","title":"func lengthAt<Heads>(obj: ObjId, heads: Heads) -> UInt64","type":"method"},{"path":"\/documentation\/automerge\/document\/textat(obj:heads:)","title":"func textAt<Heads>(obj: ObjId, heads: Heads) throws -> String","type":"method"},{"title":"Saving, syncing, forking, and merging","type":"groupMarker"},{"path":"\/documentation\/automerge\/document\/save()","title":"func save() -> [UInt8]","type":"method"},{"path":"\/documentation\/automerge\/document\/encodenewchanges()","title":"func encodeNewChanges() -> [UInt8]","type":"method"},{"path":"\/documentation\/automerge\/document\/encodechangessince(heads:)","title":"func encodeChangesSince<Heads>(heads: Heads) throws -> [UInt8]","type":"method"},{"path":"\/documentation\/automerge\/document\/applyencodedchanges(encoded:)","title":"func applyEncodedChanges(encoded: [UInt8]) throws","type":"method"},{"path":"\/documentation\/automerge\/document\/applyencodedchangeswithpatches(encoded:)","title":"func applyEncodedChangesWithPatches(encoded: [UInt8]) throws -> [Patch]","type":"method"},{"path":"\/documentation\/automerge\/document\/generatesyncmessage(state:)","title":"func generateSyncMessage(state: SyncState) -> [UInt8]?","type":"method"},{"path":"\/documentation\/automerge\/document\/receivesyncmessage(state:message:)","title":"func receiveSyncMessage(state: SyncState, message: [UInt8]) throws","type":"method"},{"path":"\/documentation\/automerge\/document\/receivesyncmessagewithpatches(state:message:)","title":"func receiveSyncMessageWithPatches(state: SyncState, message: [UInt8]) throws -> [Patch]","type":"method"},{"path":"\/documentation\/automerge\/document\/fork()","title":"func fork() -> Document","type":"method"},{"path":"\/documentation\/automerge\/document\/forkat(heads:)","title":"func forkAt<Heads>(heads: Heads) throws -> Document","type":"method"},{"path":"\/documentation\/automerge\/document\/merge(other:)","title":"func merge(other: Document) throws","type":"method"},{"path":"\/documentation\/automerge\/document\/mergewithpatches(other:)","title":"func mergeWithPatches(other: Document) throws -> [Patch]","type":"method"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/automerge\/document\/actor","title":"var actor: ActorId","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/automerge\/document\/insert(obj:index:value:)","title":"func insert(obj: ObjId, index: UInt64, value: ScalarValue) throws","type":"method"},{"path":"\/documentation\/automerge\/document\/path(obj:)","title":"func path(obj: ObjId) throws -> [PathElement]","type":"method"}],"path":"\/documentation\/automerge\/document","title":"Document","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automerge\/actorid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automerge\/actorid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/automerge\/actorid","title":"ActorId","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/automerge\/changehash\/debugdescription","title":"var debugDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automerge\/changehash\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automerge\/changehash\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/automerge\/changehash","title":"ChangeHash","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/automerge\/decodesyncstateerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/automerge\/decodesyncstateerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/automerge\/decodesyncstateerror","title":"DecodeSyncStateError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/automerge\/deleteseq\/init(obj:index:length:)","title":"init(obj: ObjId, index: UInt64, length: UInt64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/automerge\/deleteseq\/index","title":"let index: UInt64","type":"property"},{"path":"\/documentation\/automerge\/deleteseq\/length","title":"let length: UInt64","type":"property"},{"path":"\/documentation\/automerge\/deleteseq\/obj","title":"let obj: ObjId","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automerge\/deleteseq\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automerge\/deleteseq\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/automerge\/deleteseq","title":"DeleteSeq","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/automerge\/docerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/automerge\/docerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/automerge\/docerror","title":"DocError","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/automerge\/loaderror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/automerge\/loaderror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/automerge\/loaderror","title":"LoadError","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/automerge\/objid\/root","title":"static let ROOT: ObjId","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automerge\/objid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automerge\/objid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/automerge\/objid","title":"ObjId","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/automerge\/patch\/init(action:path:)","title":"init(action: PatchAction, path: [PathElement])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/automerge\/patch\/action","title":"let action: PatchAction","type":"property"},{"path":"\/documentation\/automerge\/patch\/path","title":"let path: [PathElement]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automerge\/patch\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automerge\/patch\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/automerge\/patch","title":"Patch","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/automerge\/pathelement\/init(obj:prop:)","title":"init(obj: ObjId, prop: Prop)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automerge\/pathelement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automerge\/pathelement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/automerge\/pathelement","title":"PathElement","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/automerge\/receivesyncerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/automerge\/receivesyncerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/automerge\/receivesyncerror","title":"ReceiveSyncError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/automerge\/syncstate\/init()","title":"init()","type":"init"},{"path":"\/documentation\/automerge\/syncstate\/init(bytes:)","title":"init(bytes: [UInt8]) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/automerge\/syncstate\/theirheads","title":"var theirHeads: Set<ChangeHash>?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/automerge\/syncstate\/encode()","title":"func encode() -> [UInt8]","type":"method"},{"path":"\/documentation\/automerge\/syncstate\/reset()","title":"func reset()","type":"method"}],"path":"\/documentation\/automerge\/syncstate","title":"SyncState","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/automerge\/objtype\/list","title":"case List","type":"case"},{"path":"\/documentation\/automerge\/objtype\/map","title":"case Map","type":"case"},{"path":"\/documentation\/automerge\/objtype\/text","title":"case Text","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automerge\/objtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automerge\/objtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/automerge\/objtype","title":"ObjType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/automerge\/patchaction\/deletemap(_:_:)","title":"case DeleteMap(ObjId, String)","type":"case"},{"path":"\/documentation\/automerge\/patchaction\/deleteseq(_:)","title":"case DeleteSeq(DeleteSeq)","type":"case"},{"path":"\/documentation\/automerge\/patchaction\/increment(_:_:_:)","title":"case Increment(ObjId, Prop, Int64)","type":"case"},{"path":"\/documentation\/automerge\/patchaction\/insert(_:_:_:)","title":"case Insert(ObjId, UInt64, [Value])","type":"case"},{"path":"\/documentation\/automerge\/patchaction\/put(_:_:_:)","title":"case Put(ObjId, Prop, Value)","type":"case"},{"path":"\/documentation\/automerge\/patchaction\/splicetext(_:_:_:)","title":"case SpliceText(ObjId, UInt64, String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automerge\/patchaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automerge\/patchaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/automerge\/patchaction","title":"PatchAction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/automerge\/prop\/index(_:)","title":"case Index(UInt64)","type":"case"},{"path":"\/documentation\/automerge\/prop\/key(_:)","title":"case Key(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automerge\/prop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automerge\/prop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/automerge\/prop","title":"Prop","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/automerge\/scalarvalue\/boolean(_:)","title":"case Boolean(Bool)","type":"case"},{"path":"\/documentation\/automerge\/scalarvalue\/bytes(_:)","title":"case Bytes([UInt8])","type":"case"},{"path":"\/documentation\/automerge\/scalarvalue\/counter(_:)","title":"case Counter(Int64)","type":"case"},{"path":"\/documentation\/automerge\/scalarvalue\/f64(_:)","title":"case F64(Double)","type":"case"},{"path":"\/documentation\/automerge\/scalarvalue\/int(_:)","title":"case Int(Int64)","type":"case"},{"path":"\/documentation\/automerge\/scalarvalue\/null","title":"case Null","type":"case"},{"path":"\/documentation\/automerge\/scalarvalue\/string(_:)","title":"case String(String)","type":"case"},{"path":"\/documentation\/automerge\/scalarvalue\/timestamp(_:)","title":"case Timestamp(Int64)","type":"case"},{"path":"\/documentation\/automerge\/scalarvalue\/uint(_:)","title":"case Uint(UInt64)","type":"case"},{"path":"\/documentation\/automerge\/scalarvalue\/unknown(typecode:data:)","title":"case Unknown(typeCode: UInt8, data: [UInt8])","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automerge\/scalarvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automerge\/scalarvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/automerge\/scalarvalue","title":"ScalarValue","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/automerge\/value\/object(_:_:)","title":"case Object(ObjId, ObjType)","type":"case"},{"path":"\/documentation\/automerge\/value\/scalar(_:)","title":"case Scalar(ScalarValue)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automerge\/value\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automerge\/value\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/automerge\/value","title":"Value","type":"enum"}],"path":"\/documentation\/automerge","title":"Automerge","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/doc\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/doc\/actorid()","title":"func actorId() -> ActorId","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/applyencodedchanges(changes:)","title":"func applyEncodedChanges(changes: [UInt8]) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/applyencodedchangeswithpatches(changes:)","title":"func applyEncodedChangesWithPatches(changes: [UInt8]) throws -> [Patch]","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/deleteinlist(obj:index:)","title":"func deleteInList(obj: ObjId, index: UInt64) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/deleteinmap(obj:key:)","title":"func deleteInMap(obj: ObjId, key: String) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/encodechangessince(heads:)","title":"func encodeChangesSince(heads: [ChangeHash]) throws -> [UInt8]","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/encodenewchanges()","title":"func encodeNewChanges() -> [UInt8]","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/fork()","title":"func fork() -> Doc","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/forkat(heads:)","title":"func forkAt(heads: [ChangeHash]) throws -> Doc","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/generatesyncmessage(state:)","title":"func generateSyncMessage(state: SyncState) -> [UInt8]?","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/getallatinlist(obj:index:heads:)","title":"func getAllAtInList(obj: ObjId, index: UInt64, heads: [ChangeHash]) throws -> [Value]","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/getallatinmap(obj:key:heads:)","title":"func getAllAtInMap(obj: ObjId, key: String, heads: [ChangeHash]) throws -> [Value]","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/getallinlist(obj:index:)","title":"func getAllInList(obj: ObjId, index: UInt64) throws -> [Value]","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/getallinmap(obj:key:)","title":"func getAllInMap(obj: ObjId, key: String) throws -> [Value]","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/getatinlist(obj:index:heads:)","title":"func getAtInList(obj: ObjId, index: UInt64, heads: [ChangeHash]) throws -> Value?","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/getatinmap(obj:key:heads:)","title":"func getAtInMap(obj: ObjId, key: String, heads: [ChangeHash]) throws -> Value?","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/getinlist(obj:index:)","title":"func getInList(obj: ObjId, index: UInt64) throws -> Value?","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/getinmap(obj:key:)","title":"func getInMap(obj: ObjId, key: String) throws -> Value?","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/heads()","title":"func heads() -> [ChangeHash]","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/incrementinlist(obj:index:by:)","title":"func incrementInList(obj: ObjId, index: UInt64, by: Int64) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/incrementinmap(obj:key:by:)","title":"func incrementInMap(obj: ObjId, key: String, by: Int64) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/insertinlist(obj:index:value:)","title":"func insertInList(obj: ObjId, index: UInt64, value: ScalarValue) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/insertobjectinlist(obj:index:objtype:)","title":"func insertObjectInList(obj: ObjId, index: UInt64, objType: ObjType) throws -> ObjId","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/length(obj:)","title":"func length(obj: ObjId) -> UInt64","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/lengthat(obj:heads:)","title":"func lengthAt(obj: ObjId, heads: [ChangeHash]) -> UInt64","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/mapentries(obj:)","title":"func mapEntries(obj: ObjId) throws -> [KeyValue]","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/mapentriesat(obj:heads:)","title":"func mapEntriesAt(obj: ObjId, heads: [ChangeHash]) throws -> [KeyValue]","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/mapkeys(obj:)","title":"func mapKeys(obj: ObjId) -> [String]","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/mapkeysat(obj:heads:)","title":"func mapKeysAt(obj: ObjId, heads: [ChangeHash]) -> [String]","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/merge(other:)","title":"func merge(other: Doc) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/mergewithpatches(other:)","title":"func mergeWithPatches(other: Doc) throws -> [Patch]","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/path(obj:)","title":"func path(obj: ObjId) throws -> [PathElement]","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/putinlist(obj:index:value:)","title":"func putInList(obj: ObjId, index: UInt64, value: ScalarValue) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/putinmap(obj:key:value:)","title":"func putInMap(obj: ObjId, key: String, value: ScalarValue) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/putobjectinlist(obj:index:objtype:)","title":"func putObjectInList(obj: ObjId, index: UInt64, objType: ObjType) throws -> ObjId","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/putobjectinmap(obj:key:objtype:)","title":"func putObjectInMap(obj: ObjId, key: String, objType: ObjType) throws -> ObjId","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/receivesyncmessage(state:msg:)","title":"func receiveSyncMessage(state: SyncState, msg: [UInt8]) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/receivesyncmessagewithpatches(state:msg:)","title":"func receiveSyncMessageWithPatches(state: SyncState, msg: [UInt8]) throws -> [Patch]","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/save()","title":"func save() -> [UInt8]","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/setactor(actor:)","title":"func setActor(actor: ActorId)","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/splice(obj:start:delete:values:)","title":"func splice(obj: ObjId, start: UInt64, delete: UInt64, values: [ScalarValue]) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/splicetext(obj:start:delete:chars:)","title":"func spliceText(obj: ObjId, start: UInt64, delete: UInt64, chars: String) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/text(obj:)","title":"func text(obj: ObjId) throws -> String","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/textat(obj:heads:)","title":"func textAt(obj: ObjId, heads: [ChangeHash]) throws -> String","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/values(obj:)","title":"func values(obj: ObjId) throws -> [Value]","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/valuesat(obj:heads:)","title":"func valuesAt(obj: ObjId, heads: [ChangeHash]) throws -> [Value]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/doc\/load(bytes:)","title":"static func load(bytes: [UInt8]) throws -> Doc","type":"method"},{"path":"\/documentation\/automergeuniffi\/doc\/newwithactor(actor:)","title":"static func newWithActor(actor: ActorId) -> Doc","type":"method"}],"path":"\/documentation\/automergeuniffi\/doc","title":"Doc","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/syncstate\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/syncstate\/encode()","title":"func encode() -> [UInt8]","type":"method"},{"path":"\/documentation\/automergeuniffi\/syncstate\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/automergeuniffi\/syncstate\/theirheads()","title":"func theirHeads() -> [ChangeHash]?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/syncstate\/decode(bytes:)","title":"static func decode(bytes: [UInt8]) throws -> SyncState","type":"method"}],"path":"\/documentation\/automergeuniffi\/syncstate","title":"SyncState","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/actorid()","title":"func actorId() -> ActorId","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/applyencodedchanges(changes:)","title":"func applyEncodedChanges(changes: [UInt8]) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/applyencodedchangeswithpatches(changes:)","title":"func applyEncodedChangesWithPatches(changes: [UInt8]) throws -> [Patch]","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/deleteinlist(obj:index:)","title":"func deleteInList(obj: ObjId, index: UInt64) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/deleteinmap(obj:key:)","title":"func deleteInMap(obj: ObjId, key: String) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/encodechangessince(heads:)","title":"func encodeChangesSince(heads: [ChangeHash]) throws -> [UInt8]","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/encodenewchanges()","title":"func encodeNewChanges() -> [UInt8]","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/fork()","title":"func fork() -> Doc","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/forkat(heads:)","title":"func forkAt(heads: [ChangeHash]) throws -> Doc","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/generatesyncmessage(state:)","title":"func generateSyncMessage(state: SyncState) -> [UInt8]?","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/getallatinlist(obj:index:heads:)","title":"func getAllAtInList(obj: ObjId, index: UInt64, heads: [ChangeHash]) throws -> [Value]","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/getallatinmap(obj:key:heads:)","title":"func getAllAtInMap(obj: ObjId, key: String, heads: [ChangeHash]) throws -> [Value]","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/getallinlist(obj:index:)","title":"func getAllInList(obj: ObjId, index: UInt64) throws -> [Value]","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/getallinmap(obj:key:)","title":"func getAllInMap(obj: ObjId, key: String) throws -> [Value]","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/getatinlist(obj:index:heads:)","title":"func getAtInList(obj: ObjId, index: UInt64, heads: [ChangeHash]) throws -> Value?","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/getatinmap(obj:key:heads:)","title":"func getAtInMap(obj: ObjId, key: String, heads: [ChangeHash]) throws -> Value?","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/getinlist(obj:index:)","title":"func getInList(obj: ObjId, index: UInt64) throws -> Value?","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/getinmap(obj:key:)","title":"func getInMap(obj: ObjId, key: String) throws -> Value?","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/heads()","title":"func heads() -> [ChangeHash]","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/incrementinlist(obj:index:by:)","title":"func incrementInList(obj: ObjId, index: UInt64, by: Int64) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/incrementinmap(obj:key:by:)","title":"func incrementInMap(obj: ObjId, key: String, by: Int64) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/insertinlist(obj:index:value:)","title":"func insertInList(obj: ObjId, index: UInt64, value: ScalarValue) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/insertobjectinlist(obj:index:objtype:)","title":"func insertObjectInList(obj: ObjId, index: UInt64, objType: ObjType) throws -> ObjId","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/length(obj:)","title":"func length(obj: ObjId) -> UInt64","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/lengthat(obj:heads:)","title":"func lengthAt(obj: ObjId, heads: [ChangeHash]) -> UInt64","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/mapentries(obj:)","title":"func mapEntries(obj: ObjId) throws -> [KeyValue]","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/mapentriesat(obj:heads:)","title":"func mapEntriesAt(obj: ObjId, heads: [ChangeHash]) throws -> [KeyValue]","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/mapkeys(obj:)","title":"func mapKeys(obj: ObjId) -> [String]","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/mapkeysat(obj:heads:)","title":"func mapKeysAt(obj: ObjId, heads: [ChangeHash]) -> [String]","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/merge(other:)","title":"func merge(other: Doc) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/mergewithpatches(other:)","title":"func mergeWithPatches(other: Doc) throws -> [Patch]","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/path(obj:)","title":"func path(obj: ObjId) throws -> [PathElement]","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/putinlist(obj:index:value:)","title":"func putInList(obj: ObjId, index: UInt64, value: ScalarValue) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/putinmap(obj:key:value:)","title":"func putInMap(obj: ObjId, key: String, value: ScalarValue) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/putobjectinlist(obj:index:objtype:)","title":"func putObjectInList(obj: ObjId, index: UInt64, objType: ObjType) throws -> ObjId","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/putobjectinmap(obj:key:objtype:)","title":"func putObjectInMap(obj: ObjId, key: String, objType: ObjType) throws -> ObjId","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/receivesyncmessage(state:msg:)","title":"func receiveSyncMessage(state: SyncState, msg: [UInt8]) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/receivesyncmessagewithpatches(state:msg:)","title":"func receiveSyncMessageWithPatches(state: SyncState, msg: [UInt8]) throws -> [Patch]","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/save()","title":"func save() -> [UInt8]","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/setactor(actor:)","title":"func setActor(actor: ActorId)","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/splice(obj:start:delete:values:)","title":"func splice(obj: ObjId, start: UInt64, delete: UInt64, values: [ScalarValue]) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/splicetext(obj:start:delete:chars:)","title":"func spliceText(obj: ObjId, start: UInt64, delete: UInt64, chars: String) throws","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/text(obj:)","title":"func text(obj: ObjId) throws -> String","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/textat(obj:heads:)","title":"func textAt(obj: ObjId, heads: [ChangeHash]) throws -> String","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/values(obj:)","title":"func values(obj: ObjId) throws -> [Value]","type":"method"},{"path":"\/documentation\/automergeuniffi\/docprotocol\/valuesat(obj:heads:)","title":"func valuesAt(obj: ObjId, heads: [ChangeHash]) throws -> [Value]","type":"method"}],"path":"\/documentation\/automergeuniffi\/docprotocol","title":"DocProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/syncstateprotocol\/encode()","title":"func encode() -> [UInt8]","type":"method"},{"path":"\/documentation\/automergeuniffi\/syncstateprotocol\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/automergeuniffi\/syncstateprotocol\/theirheads()","title":"func theirHeads() -> [ChangeHash]?","type":"method"}],"path":"\/documentation\/automergeuniffi\/syncstateprotocol","title":"SyncStateProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypeactorid\/lift(_:)","title":"static func lift(RustBuffer) throws -> ActorId","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypeactorid\/lower(_:)","title":"static func lower(ActorId) -> RustBuffer","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypeactorid\/read(from:)","title":"static func read(from: inout (data: Data, offset: Data.Index)) throws -> ActorId","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypeactorid\/write(_:into:)","title":"static func write(ActorId, into: inout [UInt8])","type":"method"}],"path":"\/documentation\/automergeuniffi\/fficonvertertypeactorid","title":"FfiConverterTypeActorId","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypechangehash\/lift(_:)","title":"static func lift(RustBuffer) throws -> ChangeHash","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypechangehash\/lower(_:)","title":"static func lower(ChangeHash) -> RustBuffer","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypechangehash\/read(from:)","title":"static func read(from: inout (data: Data, offset: Data.Index)) throws -> ChangeHash","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypechangehash\/write(_:into:)","title":"static func write(ChangeHash, into: inout [UInt8])","type":"method"}],"path":"\/documentation\/automergeuniffi\/fficonvertertypechangehash","title":"FfiConverterTypeChangeHash","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypedecodesyncstateerror\/read(from:)","title":"static func read(from: inout (data: Data, offset: Data.Index)) throws -> DecodeSyncStateError","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypedecodesyncstateerror\/write(_:into:)","title":"static func write(DecodeSyncStateError, into: inout [UInt8])","type":"method"}],"path":"\/documentation\/automergeuniffi\/fficonvertertypedecodesyncstateerror","title":"FfiConverterTypeDecodeSyncStateError","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypedoc\/lift(_:)","title":"static func lift(UnsafeMutableRawPointer) throws -> Doc","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypedoc\/lower(_:)","title":"static func lower(Doc) -> UnsafeMutableRawPointer","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypedoc\/read(from:)","title":"static func read(from: inout (data: Data, offset: Data.Index)) throws -> Doc","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypedoc\/write(_:into:)","title":"static func write(Doc, into: inout [UInt8])","type":"method"}],"path":"\/documentation\/automergeuniffi\/fficonvertertypedoc","title":"FfiConverterTypeDoc","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypedocerror\/read(from:)","title":"static func read(from: inout (data: Data, offset: Data.Index)) throws -> DocError","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypedocerror\/write(_:into:)","title":"static func write(DocError, into: inout [UInt8])","type":"method"}],"path":"\/documentation\/automergeuniffi\/fficonvertertypedocerror","title":"FfiConverterTypeDocError","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypekeyvalue\/read(from:)","title":"static func read(from: inout (data: Data, offset: Data.Index)) throws -> KeyValue","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypekeyvalue\/write(_:into:)","title":"static func write(KeyValue, into: inout [UInt8])","type":"method"}],"path":"\/documentation\/automergeuniffi\/fficonvertertypekeyvalue","title":"FfiConverterTypeKeyValue","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypeloaderror\/read(from:)","title":"static func read(from: inout (data: Data, offset: Data.Index)) throws -> LoadError","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypeloaderror\/write(_:into:)","title":"static func write(LoadError, into: inout [UInt8])","type":"method"}],"path":"\/documentation\/automergeuniffi\/fficonvertertypeloaderror","title":"FfiConverterTypeLoadError","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypeobjid\/lift(_:)","title":"static func lift(RustBuffer) throws -> ObjId","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypeobjid\/lower(_:)","title":"static func lower(ObjId) -> RustBuffer","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypeobjid\/read(from:)","title":"static func read(from: inout (data: Data, offset: Data.Index)) throws -> ObjId","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypeobjid\/write(_:into:)","title":"static func write(ObjId, into: inout [UInt8])","type":"method"}],"path":"\/documentation\/automergeuniffi\/fficonvertertypeobjid","title":"FfiConverterTypeObjId","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypeobjtype\/read(from:)","title":"static func read(from: inout (data: Data, offset: Data.Index)) throws -> ObjType","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypeobjtype\/write(_:into:)","title":"static func write(ObjType, into: inout [UInt8])","type":"method"}],"path":"\/documentation\/automergeuniffi\/fficonvertertypeobjtype","title":"FfiConverterTypeObjType","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypepatch\/read(from:)","title":"static func read(from: inout (data: Data, offset: Data.Index)) throws -> Patch","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypepatch\/write(_:into:)","title":"static func write(Patch, into: inout [UInt8])","type":"method"}],"path":"\/documentation\/automergeuniffi\/fficonvertertypepatch","title":"FfiConverterTypePatch","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypepatchaction\/read(from:)","title":"static func read(from: inout (data: Data, offset: Data.Index)) throws -> PatchAction","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypepatchaction\/write(_:into:)","title":"static func write(PatchAction, into: inout [UInt8])","type":"method"}],"path":"\/documentation\/automergeuniffi\/fficonvertertypepatchaction","title":"FfiConverterTypePatchAction","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypepathelement\/read(from:)","title":"static func read(from: inout (data: Data, offset: Data.Index)) throws -> PathElement","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypepathelement\/write(_:into:)","title":"static func write(PathElement, into: inout [UInt8])","type":"method"}],"path":"\/documentation\/automergeuniffi\/fficonvertertypepathelement","title":"FfiConverterTypePathElement","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypeprop\/read(from:)","title":"static func read(from: inout (data: Data, offset: Data.Index)) throws -> Prop","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypeprop\/write(_:into:)","title":"static func write(Prop, into: inout [UInt8])","type":"method"}],"path":"\/documentation\/automergeuniffi\/fficonvertertypeprop","title":"FfiConverterTypeProp","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypereceivesyncerror\/read(from:)","title":"static func read(from: inout (data: Data, offset: Data.Index)) throws -> ReceiveSyncError","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypereceivesyncerror\/write(_:into:)","title":"static func write(ReceiveSyncError, into: inout [UInt8])","type":"method"}],"path":"\/documentation\/automergeuniffi\/fficonvertertypereceivesyncerror","title":"FfiConverterTypeReceiveSyncError","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypescalarvalue\/read(from:)","title":"static func read(from: inout (data: Data, offset: Data.Index)) throws -> ScalarValue","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypescalarvalue\/write(_:into:)","title":"static func write(ScalarValue, into: inout [UInt8])","type":"method"}],"path":"\/documentation\/automergeuniffi\/fficonvertertypescalarvalue","title":"FfiConverterTypeScalarValue","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypesyncstate\/lift(_:)","title":"static func lift(UnsafeMutableRawPointer) throws -> SyncState","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypesyncstate\/lower(_:)","title":"static func lower(SyncState) -> UnsafeMutableRawPointer","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypesyncstate\/read(from:)","title":"static func read(from: inout (data: Data, offset: Data.Index)) throws -> SyncState","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypesyncstate\/write(_:into:)","title":"static func write(SyncState, into: inout [UInt8])","type":"method"}],"path":"\/documentation\/automergeuniffi\/fficonvertertypesyncstate","title":"FfiConverterTypeSyncState","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypevalue\/read(from:)","title":"static func read(from: inout (data: Data, offset: Data.Index)) throws -> Value","type":"method"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypevalue\/write(_:into:)","title":"static func write(Value, into: inout [UInt8])","type":"method"}],"path":"\/documentation\/automergeuniffi\/fficonvertertypevalue","title":"FfiConverterTypeValue","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/keyvalue\/init(key:value:)","title":"init(key: String, value: Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/keyvalue\/key","title":"var key: String","type":"property"},{"path":"\/documentation\/automergeuniffi\/keyvalue\/value","title":"var value: Value","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/keyvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/automergeuniffi\/keyvalue\/==(_:_:)","title":"static func == (KeyValue, KeyValue) -> Bool","type":"op"}],"path":"\/documentation\/automergeuniffi\/keyvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/keyvalue\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/automergeuniffi\/keyvalue\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/automergeuniffi\/keyvalue","title":"KeyValue","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/patch\/init(path:action:)","title":"init(path: [PathElement], action: PatchAction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/patch\/action","title":"var action: PatchAction","type":"property"},{"path":"\/documentation\/automergeuniffi\/patch\/path","title":"var path: [PathElement]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/patch\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/automergeuniffi\/patch\/==(_:_:)","title":"static func == (Patch, Patch) -> Bool","type":"op"}],"path":"\/documentation\/automergeuniffi\/patch\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/patch\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/automergeuniffi\/patch\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/automergeuniffi\/patch","title":"Patch","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/pathelement\/init(prop:obj:)","title":"init(prop: Prop, obj: ObjId)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/pathelement\/obj","title":"var obj: ObjId","type":"property"},{"path":"\/documentation\/automergeuniffi\/pathelement\/prop","title":"var prop: Prop","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/pathelement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/automergeuniffi\/pathelement\/==(_:_:)","title":"static func == (PathElement, PathElement) -> Bool","type":"op"}],"path":"\/documentation\/automergeuniffi\/pathelement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/pathelement\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/automergeuniffi\/pathelement\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/automergeuniffi\/pathelement","title":"PathElement","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypekeyvalue_lift(_:)","title":"func FfiConverterTypeKeyValue_lift(RustBuffer) throws -> KeyValue","type":"func"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypekeyvalue_lower(_:)","title":"func FfiConverterTypeKeyValue_lower(KeyValue) -> RustBuffer","type":"func"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypeobjtype_lift(_:)","title":"func FfiConverterTypeObjType_lift(RustBuffer) throws -> ObjType","type":"func"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypeobjtype_lower(_:)","title":"func FfiConverterTypeObjType_lower(ObjType) -> RustBuffer","type":"func"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypepatchaction_lift(_:)","title":"func FfiConverterTypePatchAction_lift(RustBuffer) throws -> PatchAction","type":"func"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypepatchaction_lower(_:)","title":"func FfiConverterTypePatchAction_lower(PatchAction) -> RustBuffer","type":"func"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypepatch_lift(_:)","title":"func FfiConverterTypePatch_lift(RustBuffer) throws -> Patch","type":"func"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypepatch_lower(_:)","title":"func FfiConverterTypePatch_lower(Patch) -> RustBuffer","type":"func"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypepathelement_lift(_:)","title":"func FfiConverterTypePathElement_lift(RustBuffer) throws -> PathElement","type":"func"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypepathelement_lower(_:)","title":"func FfiConverterTypePathElement_lower(PathElement) -> RustBuffer","type":"func"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypeprop_lift(_:)","title":"func FfiConverterTypeProp_lift(RustBuffer) throws -> Prop","type":"func"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypeprop_lower(_:)","title":"func FfiConverterTypeProp_lower(Prop) -> RustBuffer","type":"func"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypescalarvalue_lift(_:)","title":"func FfiConverterTypeScalarValue_lift(RustBuffer) throws -> ScalarValue","type":"func"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypescalarvalue_lower(_:)","title":"func FfiConverterTypeScalarValue_lower(ScalarValue) -> RustBuffer","type":"func"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypevalue_lift(_:)","title":"func FfiConverterTypeValue_lift(RustBuffer) throws -> Value","type":"func"},{"path":"\/documentation\/automergeuniffi\/fficonvertertypevalue_lower(_:)","title":"func FfiConverterTypeValue_lower(Value) -> RustBuffer","type":"func"},{"path":"\/documentation\/automergeuniffi\/root()","title":"func root() -> ObjId","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/actorid","title":"ActorId","type":"typealias"},{"path":"\/documentation\/automergeuniffi\/changehash","title":"ChangeHash","type":"typealias"},{"path":"\/documentation\/automergeuniffi\/objid","title":"ObjId","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/automergelifecycle","title":"AutomergeLifecycle","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/decodesyncstateerror\/internal(message:)","title":"case Internal(message: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/decodesyncstateerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automergeuniffi\/decodesyncstateerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/decodesyncstateerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/automergeuniffi\/decodesyncstateerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/automergeuniffi\/decodesyncstateerror","title":"DecodeSyncStateError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/docerror\/internal(message:)","title":"case Internal(message: String)","type":"case"},{"path":"\/documentation\/automergeuniffi\/docerror\/wrongobjecttype(message:)","title":"case WrongObjectType(message: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/docerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automergeuniffi\/docerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/docerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/automergeuniffi\/docerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/automergeuniffi\/docerror","title":"DocError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/loaderror\/internal(message:)","title":"case Internal(message: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/loaderror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automergeuniffi\/loaderror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/loaderror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/automergeuniffi\/loaderror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/automergeuniffi\/loaderror","title":"LoadError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/objtype\/list","title":"case list","type":"case"},{"path":"\/documentation\/automergeuniffi\/objtype\/map","title":"case map","type":"case"},{"path":"\/documentation\/automergeuniffi\/objtype\/text","title":"case text","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/objtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automergeuniffi\/objtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/automergeuniffi\/objtype","title":"ObjType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/patchaction\/deletemap(obj:key:)","title":"case deleteMap(obj: ObjId, key: String)","type":"case"},{"path":"\/documentation\/automergeuniffi\/patchaction\/deleteseq(obj:index:length:)","title":"case deleteSeq(obj: ObjId, index: UInt64, length: UInt64)","type":"case"},{"path":"\/documentation\/automergeuniffi\/patchaction\/increment(obj:prop:value:)","title":"case increment(obj: ObjId, prop: Prop, value: Int64)","type":"case"},{"path":"\/documentation\/automergeuniffi\/patchaction\/insert(obj:index:values:)","title":"case insert(obj: ObjId, index: UInt64, values: [Value])","type":"case"},{"path":"\/documentation\/automergeuniffi\/patchaction\/put(obj:prop:value:)","title":"case put(obj: ObjId, prop: Prop, value: Value)","type":"case"},{"path":"\/documentation\/automergeuniffi\/patchaction\/splicetext(obj:index:value:)","title":"case spliceText(obj: ObjId, index: UInt64, value: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/patchaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automergeuniffi\/patchaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/automergeuniffi\/patchaction","title":"PatchAction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/prop\/index(value:)","title":"case index(value: UInt64)","type":"case"},{"path":"\/documentation\/automergeuniffi\/prop\/key(value:)","title":"case key(value: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/prop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automergeuniffi\/prop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/automergeuniffi\/prop","title":"Prop","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/receivesyncerror\/internal(message:)","title":"case Internal(message: String)","type":"case"},{"path":"\/documentation\/automergeuniffi\/receivesyncerror\/invalidmessage(message:)","title":"case InvalidMessage(message: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/receivesyncerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automergeuniffi\/receivesyncerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/receivesyncerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/automergeuniffi\/receivesyncerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/automergeuniffi\/receivesyncerror","title":"ReceiveSyncError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/scalarvalue\/boolean(value:)","title":"case boolean(value: Bool)","type":"case"},{"path":"\/documentation\/automergeuniffi\/scalarvalue\/bytes(value:)","title":"case bytes(value: [UInt8])","type":"case"},{"path":"\/documentation\/automergeuniffi\/scalarvalue\/counter(value:)","title":"case counter(value: Int64)","type":"case"},{"path":"\/documentation\/automergeuniffi\/scalarvalue\/f64(value:)","title":"case f64(value: Double)","type":"case"},{"path":"\/documentation\/automergeuniffi\/scalarvalue\/int(value:)","title":"case int(value: Int64)","type":"case"},{"path":"\/documentation\/automergeuniffi\/scalarvalue\/null","title":"case null","type":"case"},{"path":"\/documentation\/automergeuniffi\/scalarvalue\/string(value:)","title":"case string(value: String)","type":"case"},{"path":"\/documentation\/automergeuniffi\/scalarvalue\/timestamp(value:)","title":"case timestamp(value: Int64)","type":"case"},{"path":"\/documentation\/automergeuniffi\/scalarvalue\/uint(value:)","title":"case uint(value: UInt64)","type":"case"},{"path":"\/documentation\/automergeuniffi\/scalarvalue\/unknown(typecode:data:)","title":"case unknown(typeCode: UInt8, data: [UInt8])","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/scalarvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automergeuniffi\/scalarvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/automergeuniffi\/scalarvalue","title":"ScalarValue","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/value\/object(typ:id:)","title":"case object(typ: ObjType, id: ObjId)","type":"case"},{"path":"\/documentation\/automergeuniffi\/value\/scalar(value:)","title":"case scalar(value: ScalarValue)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/automergeuniffi\/value\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/automergeuniffi\/value\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/automergeuniffi\/value","title":"Value","type":"enum"}],"path":"\/documentation\/automergeuniffi","title":"AutomergeUniffi","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}